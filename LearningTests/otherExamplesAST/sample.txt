Module(
  body=[
    Import(
      names=[
        alias(name='unittest')]),
    Import(
      names=[
        alias(name='someFunction')]),
    ClassDef(
      name='TestStringMethods',
      bases=[
        Attribute(
          value=Name(id='unittest', ctx=Load()),
          attr='TestCase',
          ctx=Load())],
      keywords=[],
      body=[
        FunctionDef(
          name='test_valid',
          args=arguments(
            posonlyargs=[],
            args=[
              arg(arg='self')],
            kwonlyargs=[],
            kw_defaults=[],
            defaults=[]),
          body=[
            Assign(
              targets=[
                Name(id='c', ctx=Store())],
              value=Constant(value=3)),
            Assign(
              targets=[
                Name(id='t', ctx=Store())],
              value=Constant(value='a')),
            Expr(
              value=Call(
                func=Attribute(
                  value=Name(id='self', ctx=Load()),
                  attr='assertEqual',
                  ctx=Load()),
                args=[
                  Call(
                    func=Attribute(
                      value=Name(id='someFunction', ctx=Load()),
                      attr='doAthing',
                      ctx=Load()),
                    args=[
                      Name(id='t', ctx=Load()),
                      Name(id='c', ctx=Load())],
                    keywords=[]),
                  Tuple(
                    elts=[
                      Constant(value='A'),
                      Constant(value=13)],
                    ctx=Load())],
                keywords=[]))],
          decorator_list=[])],
      decorator_list=[]),
    If(
      test=Compare(
        left=Name(id='__name__', ctx=Load()),
        ops=[
          Eq()],
        comparators=[
          Constant(value='__main__')]),
      body=[
        Expr(
          value=Call(
            func=Attribute(
              value=Name(id='unittest', ctx=Load()),
              attr='main',
              ctx=Load()),
            args=[],
            keywords=[]))],
      orelse=[])],
  type_ignores=[])